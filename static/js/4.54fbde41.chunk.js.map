{"version":3,"sources":["containers/CurrencyRate.js","components/CurrencyDetails.js"],"names":["Component","CurrencyDetails","componentDidMount","a","currencyApi","props","match","params","name","exchangeRate","setState","finish","state","this","className","LineChart","width","height","data","rates","Line","type","dataKey","stroke","dot","CartesianGrid","strokeDasharray","XAxis","YAxis","interval","domain","Tooltip","map","r","no","mid"],"mappings":"qNAE2BA,Y,qDCErBC,E,4MAEFC,kB,sBAAoB,4BAAAC,EAAA,sEACWC,IAAA,UAAmB,EAAKC,MAAMC,MAAMC,OAAOC,OADtD,OACVC,EADU,OAEhB,EAAKC,SAAS,CAACD,eAAcE,QAAQ,IAFrB,2C,EAKpBC,MAAQ,CACJD,QAAQ,EACRF,aAAc,I,4CAGlB,WAGI,IAGA,EAAiCI,KAAKD,MAA9BH,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,OAEtB,OAEI,gCACI,sBAAKG,UAAU,iBAAf,gCAAmD,iCAASD,KAAKR,MAAMC,MAAMC,OAAOC,UAEpF,qBAAKM,UAAU,QAAf,SACI,eAACC,EAAA,EAAD,CAAWC,MAAO,IAAKC,OAAQ,IAAKC,KAAMT,EAAaU,MAAvD,UACI,cAACC,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,MAAMC,OAAO,UAAUC,KAAK,IAC1D,cAACC,EAAA,EAAD,CAAeF,OAAO,UAAUG,gBAAgB,QAChD,cAACC,EAAA,EAAD,CAAOL,QAAQ,kBACf,cAACM,EAAA,EAAD,CAAOC,SAAS,mBAAmBC,OAAQ,CAfhD,EACA,KAeK,cAACC,EAAA,EAAD,SAIR,qBAAKjB,UAAU,uBAAf,SAEI,qBAAKA,UAAU,6BAAf,UAEgB,IAAXH,GAAoBF,EAAaU,MAAMa,KAAI,SAAAC,GAGpCA,EAAEC,GACDD,EAAEE,IAFFF,EAAEC,iB,GAzCLlC,aA0DfC","file":"static/js/4.54fbde41.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass CurrencyRate extends Component {\n\n    render(){\n\n        const { no, mid } = this.props\n\n        return(\n            <div><strong>{mid}</strong> PLN<br/><small>{no}</small></div>\n        )\n    }\n}\n\nexport default CurrencyRate","import React, {Component} from 'react';\nimport * as currencyApi from '../api/currencyApi'\nimport CurrencyRate from '../containers/CurrencyRate'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\nclass CurrencyDetails extends Component {\n\n    componentDidMount = async () => {\n        const exchangeRate = await currencyApi.get(`${this.props.match.params.name}`);\n        this.setState({exchangeRate, finish: true})\n    }\n\n    state = {\n        finish: false,\n        exchangeRate: []\n    }\n\n    render(){\n\n        //todo\n        let mini = 0;\n        let maxi = 6;\n\n        const { exchangeRate, finish } = this.state\n\n        return(\n\n            <div>\n                <div className=\"currency-rates\">Currency rates for <strong>{this.props.match.params.name}</strong></div>\n                \n                <div className=\"chart\">\n                    <LineChart width={550} height={300} data={exchangeRate.rates}>\n                        <Line type=\"monotone\" dataKey=\"mid\" stroke=\"#8884d8\" dot={false}/>\n                        <CartesianGrid stroke=\"#a5a1a1\" strokeDasharray=\"5 5\" />\n                        <XAxis dataKey=\"effectiveDate\" />\n                        <YAxis interval=\"preserveStartEnd\" domain={[mini, maxi]} />\n                        <Tooltip />\n                    </LineChart>\n                </div>\n\n                <div className=\"currency-rates-table\">\n                \n                    <div className=\"currency-rates-table-items\">\n\n                        {finish === true &&  exchangeRate.rates.map(r => {\n                            <CurrencyRate\n                            key={r.no}\n                            no={r.no}\n                            mid={r.mid}\n                        />  \n                        })}\n\n                    </div>\n                </div>\n                \n            </div>\n\n        );\n\n    }\n\n}\n\nexport default CurrencyDetails"],"sourceRoot":""}