{"version":3,"sources":["api/api.js","api/currencyAPI.js","containers/CurrencyTableItem.js","containers/CurrencyTable.js","components/Start.js","components/Contact.js","components/NotFound.js","containers/Header.js","containers/Footer.js","App.js","serviceWorker.js","index.js"],"names":["get","url","Promise","resolve","reject","fetch","then","response","json","NBPApiUri","getAll","api","getFewLastRatesByCode","code","getRateForCodeByDate","date","CurrencyItem","this","props","currency","mid","to","Component","CurrencyTable","state","rates","filterCurrencies","e","text","currentTarget","value","filteredRates","getFilteredCurrenciesForText","setState","filter","c","toLowerCase","includes","table","no","className","onInput","bind","placeholder","map","r","CurrencyTableItem","length","Start","componentDidMount","a","currencyAPI","exchangeRates","effectiveDate","Contact","href","NotFound","counter","intervalId","setInterval","countdown","componentWillUnmount","clearInterval","location","pathname","Header","txt","Footer","CurrencyDetails","lazy","Container","styled","div","SmallContainer","StyledLink","Link","App","fallback","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fcac2a7.chunk.js","sourcesContent":["export const get = url =>\n  new Promise(\n    (resolve, reject) => {\n      fetch(url)\n        .then(response => response.json())\n        .then(json => resolve(json))\n    }\n  )\n\n","import * as api from './api'\n\nconst NBPApiUri = 'https://api.nbp.pl/api/exchangerates';\n\nexport const getAll = () => api.get(`${NBPApiUri}/tables/a?format=json`)\n\nexport const getFewLastRatesByCode = (code) => api.get(`${NBPApiUri}/rates/a/${code}/last/20?format=json`)\n\nexport const getRateForCodeByDate = (code, date) => api.get(`${NBPApiUri}/rates/a/${code}/${date}?format=json`)","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\n\nclass CurrencyItem extends Component {\n\n    render(){\n\n        const { code, currency, mid } = this.props\n\n        return(\n            <div><strong><Link to={`/currency/${code}`}>{code}</Link></strong> {mid} PLN <small>{currency}</small></div>\n        )\n    }\n}\n\nexport default CurrencyItem","import React, { Component } from 'react'\nimport CurrencyTableItem from './CurrencyTableItem'\n\nclass CurrencyTable extends Component {\n\n    state = {\n        rates: this.props.rates\n    }\n\n    filterCurrencies = (e) => {\n        const text = e.currentTarget.value;\n        const filteredRates = this.getFilteredCurrenciesForText(text)\n        this.setState({\n          rates: filteredRates\n        });\n    }\n\n    getFilteredCurrenciesForText(text) {\n        return this.props.rates.filter(c => c.code.toLowerCase().includes(text.toLowerCase()))\n    }\n\n  render() {\n\n    const { table, no, date } = this.props\n\n    return(\n        <div>\n            <div className=\"currency-header\">\n                <strong>Table {table}</strong> no <strong>{no}</strong> from <strong>{date}</strong>\n            </div>\n            <div className=\"currency-input\">\n                <input onInput={this.filterCurrencies.bind(this)} placeholder=\"Type currency...\" />\n            </div>\n            <div className=\"currency-table\">\n                <div className=\"currency-table-items\">\n                    {this.state.rates.map(r =>\n                        <CurrencyTableItem\n                            key={r.code}\n                            code={r.code}\n                            currency={r.currency}\n                            mid={r.mid}\n                    />    \n                    )}\n                    {this.state.rates.length === 0 && <div className=\"alert alert-warning\">No results!</div>}\n                </div>\n            </div>\n        </div>\n    )\n    \n  }\n}\n\nexport default CurrencyTable","import React, {Component} from 'react'\nimport CurrencyTable from '../containers/CurrencyTable'\nimport * as currencyAPI from '../api/currencyAPI'\n\nclass Start extends Component {\n\n    componentDidMount = async () => {\n        const exchangeRates = await currencyAPI.getAll();\n        this.setState({exchangeRates})\n    }\n\n    state = {\n        exchangeRates: []\n    }\n\n    render(){\n\n        const { exchangeRates } = this.state\n\n        return(\n\n            <div className=\"content col-md-12\">\n\n                {exchangeRates.map(c => \n                    <CurrencyTable\n                            key={c.no}\n                            table={c.table}\n                            no={c.no}\n                            date={c.effectiveDate}\n                            rates={c.rates}\n                    />\n                )}\n\n            </div>\n\n        );\n\n    }\n\n}\n\nexport default Start;","import React, {Component} from 'react';\n\nclass Contact extends Component {\n\n    render(){\n\n        return(\n            <div className=\"margin-top-30\">Contact with me by <a href=\"https://github.com/bartdeveloper\">GitHub</a> ;-)</div>\n        );\n\n    }\n\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass NotFound extends Component {\n\n   state = {\n       counter: 0\n   }\n\n   componentDidMount = () => {\n       const intervalId = setInterval(this.countdown, 1000)\n       this.setState({intervalId})\n   }\n\n   componentWillUnmount = () => {\n        clearInterval(this.state.intervalId);\n   }\n\n   countdown = () =>  this.setState({counter: this.state.counter - 1})\n\n    render(){\n\n        const { location } = this.props\n        const { counter } =  this.state\n\n        return(\n            <div>\n                <div>Path <code>{location.pathname}</code> not found...</div>\n                <div>Redirect to homepage in {counter} seconds</div>\n                {counter === 0 && <Redirect to='/' />}\n            </div>\n        );\n\n    }\n\n}\n\nexport default NotFound","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Header extends Component {\n\n    render(){\n\n        const { txt } = this.props\n\n        return(\n            <div><Link to='/'><h1>{txt}</h1></Link></div>\n        )\n    }\n}\n\nexport default Header","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n    render(){\n\n        return(\n            <div><i>bartdeveloper</i> &copy; 2019-2022</div>\n        );\n\n    }\n\n}\n\nexport default Footer;","import React, { Component, lazy, Suspense } from 'react';\nimport './App.css';\nimport Start from './components/Start';\nimport Contact from './components/Contact';\nimport NotFound from './components/NotFound';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Header from './containers/Header'\nimport Footer from './containers/Footer';\nimport { Link } from 'react-router-dom'\n\nconst CurrencyDetails = lazy( () => import('./components/CurrencyDetails'))\n\nconst Container = styled.div`\n    background: #c0c0c0;\n    color: #000;\n    padding: 30px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    width: 820px;\n    text-align: center;\n    border-radius: 7px;\n`\n\nconst SmallContainer = styled.div`\n    background: #c0c0c0;\n    color: #000;\n    padding: 15px;\n    margin-top: 15px;\n`\n\nconst StyledLink = styled(Link)`\n    color: #333;\n    text-decoration: none;\n    font-weight: bold;\n\n      &:hover {\n          color: #fff;\n      }\n`\nclass App extends Component {\n  render() {\n    return (\n\n      <Router>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Container className=\"centerix col-md-8\">\n          \n            <Header txt=\"💰 Currency manager\" />\n              \n            <Switch>\n              <Route exact path='/' component={Start} />\n              <Route exact path='/currency/:name' component={props => <CurrencyDetails {...props} />} />\n              <Route exact path='/contact' component={Contact} />\n              <Route component={NotFound} />\n            </Switch>\n            \n            <SmallContainer>\n              <StyledLink to='/contact'>Contact</StyledLink>\n            </SmallContainer>\n\n            <Footer />\n\n          </Container>\n        </Suspense>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}